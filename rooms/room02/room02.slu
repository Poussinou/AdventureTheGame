var room02_part = "a";
var room02_centerX = 683;

var room02_crossedCB = FALSE;
var room02_beforeAttack = TRUE;

sub lineSub() {
	setCharacterWalkSpeed(room02_line, 5);
	
	loop {
		forceCharacter(room02_line, 3900, 530);
		jumpCharacter(room02_line, 0, 530);
	}
}
sub lineSub2() {
	setCharacterWalkSpeed(room02_line2, 5);
	
	loop {
		forceCharacter(room02_line2, 0, 530);
		jumpCharacter(room02_line2, -3900, 530);
	}
}
sub lineSub3() {
	setCharacterWalkSpeed(room02_line3, 5);
	
	loop {
		forceCharacter(room02_line3, 7800, 530);
		jumpCharacter(room02_line3, 3900, 530);
	}
}

sub room02()
{
	setSceneDimensions(4098, 768);
	addOverlay('rooms/room02/room02.png', 0, 0);
	setFloor('rooms/room02/room02.flo');
	
	setScale(450, 42);
	
	addCharacter(ego, 200, 670, makeEgoAnim());

	addScreenRegion(room02_elevatorDoor, 0, 358, 68, 664, 137, 707, WEST);
	addScreenRegion(room02_abTransition, 1320, 0, 1420, 768, 0, 0, 0);
	addScreenRegion(room02_bcTransition, 2660, 0, 2790, 768, 0, 0, 0);
	
	addOverlay('rooms/room02/express.png', 3776, 608);
	addScreenRegion(room02_coffeeMachine, 3776, 608, 3826, 658, 3571, 710, EAST);
	
	addOverlay('rooms/room02/cable.png', 3776, 658);
	
	addOverlay('rooms/room02/gum.png', 739, 645);
	addScreenRegion(room02_gum, 739, 645, 739+50, 645+50, 700, 645, EAST);
	
	addCharacter(room02_book, 800, 645, anim('rooms/room02/book.duc', 0));
	setCharacterExtra(room02_book, FIXEDSIZE);
	
	addCharacter(room02_newspaper, 4040, 308, anim('rooms/room02/newspaper.duc', 0));
	setCharacterExtra(room02_newspaper, FIXEDSIZE);

	addCharacter(room02_line, 0, 530, makeStaticCostume(anim ('rooms/room02/line.duc', 2)));
	addCharacter(room02_line2, -3900, 530, makeStaticCostume(anim ('rooms/room02/line.duc', 2)));
	addCharacter(room02_line3, 3900, 530, makeStaticCostume(anim ('rooms/room02/line.duc', 2)));
	
	addCharacter(room02_lineobst, 0, 544, makeStaticCostume(anim ('rooms/room02/line.duc', 1)));
	addCharacter(room02_lineobst2, 4098, 535, makeStaticCostume(anim ('rooms/room02/line.duc', 0)));
	setCharacterExtra(room02_line, FIXEDSIZE);
	setCharacterExtra(room02_line2, FIXEDSIZE);
	setCharacterExtra(room02_line3, FIXEDSIZE);
	setCharacterExtra(room02_lineobst, FIXEDSIZE);
	setCharacterExtra(room02_lineobst2, FIXEDSIZE);
	
	spawnSub(lineSub);
	spawnSub(lineSub2);
	spawnSub(lineSub3);
	
	setCharacterWalkSpeed(ego, 2);
	
}

sub gotoRoom02Part(part, x)
{
	room02_part = part;
	smoothScroll(room02_centerX, x);
	room02_centerX = x;
	
	#arrowTarget();
}

objectType room02_line("") {
}
objectType room02_line2("") {
}
objectType room02_line3("") {
}
objectType room02_lineobst("") {
}
objectType room02_lineobst2("") {
}

objectType room02_elevatorDoor("elevator door")
{
	event oneCursor = arrowEast;
	event onlyAction
	{
		gotoRoom(roomElevator);
	}
}

objectType room02_abTransition("go")
{
	event oneCursor = arrowEast;
	event onlyAction
	{
		if(room02_part == "a")
		{
			moveCharacter(ego, 1430, getObjectY(ego));
			gotoRoom02Part("b", 2049);
			
		}
		else if(room02_part == "b")
		{
			moveCharacter(ego, 1310, getObjectY(ego));
			gotoRoom02Part("a", 683);
		}
	}
}

objectType room02_bcTransition("go")
{
	event oneCursor = arrowEast;
	event onlyAction
	{
		if(room02_part == "b")
		{
			moveCharacter(ego, 2800, getObjectY(ego));
			gotoRoom02Part("c", 3415);
		}
		else if(room02_part == "c")
		{
			if(! room02_crossedCB)
				addCharacter(room02_superior, 1950, 681, makeEgoAnim());
		
			moveCharacter(ego, 2650, getObjectY(ego));
			gotoRoom02Part("b", 2049);
			
			
			if(! room02_crossedCB)
			{
				callEvent(talkingToEgo, room02_superior);
				
				room02_crossedCB = TRUE;
			}
		}
	}
}

objectType room02_coffeeMachine("coffee machine")
{
	event interactWith
	{
		if(! room02_crossedCB)
			say(ego, "Thanks, I've already had my morning coffee.");
		else
			say(ego, "It's not working.");
	}
}

objectType talkingToEgo("") {}

objectType room02_superior("superior")
{
	event talkingToEgo
	{
		say(room02_superior, "Hey! Are you that new intern?");
		say(ego, "Yep! Ready to make some games!");
		say(room02_superior, "Great. Make me some coffee then.");
		say(ego, "Oh. Okay.");
		
		addScreenRegion(room02_cable, 3776, 658, 3826, 708, 3571, 710, EAST);
	}
	
	event interactWith
	{
		say(ego, "Excuse me...");
		say(room02_superior, "Got a coffee?");
		say(ego, "No, but...");
		say(room02_superior, "Then go get it!");
	}
	
	event walkToPerson
	{
		moveCharacter (ego, room02_superior);
		turnCharacter (ego, WEST);
	}
}

objectType room02_cable("cable")
{
	event lookAt
	{
		if(room02_beforeAttack)
		{
			say(ego, "Hey!");
			say(ego, "It's not connected!");
		}
		else
			say(ego, "It's plugged in now.");
	}
	
	event interactWith
	{
		if(room02_beforeAttack)
		{
			#TODO all hell breaks loose
			
			# aftermath
			addCharacter(room02_rope, 3777, 69, anim('rooms/room02/rope.duc', 0));
			setCharacterExtra(room02_rope, FIXEDSIZE);
			
			removeCharacter(room02_superior);
			
			room02_beforeAttack = FALSE;
		}
		else
		{
			say(ego, "Mmmm, it smells good.");
			pause(25);
			say(ego, "Maybe I should try it.");
			pause(25);
			say(ego, "*slurp* *slurp*");
			pause(50);
			
			say(ego, "Hmmmmm! It makes me feel great. Smarter! More aggresive!");
			
		}
	}
}

objectType room02_gum("gum")
{
	event lookAt
	{
		say(ego, "Minty fresh!");
	}
	
	event interactWith
	{
		var count = countItems(item_gumWhole) + countItems(item_gumChewed);
		if(count < 6)
		{
			if(count < 3)
				say(ego, "I'll just pick one stick.");
			else
				say(ego, pickOne("I feel like I'm controlled by someone.", "I don't want to, but somehow I have to.", "I will take it, but isn't it enough?"));
			pushToStack(inventory, item_gumWhole);
		}
		else
			say(ego, "Okay, that's enough! I'm not going to take any more gum with me!");
	}
}

objectType room02_book("book")
{
	event lookAt
	{
		say(ego, "Game Design for Dummies. I have read it. It makes a great paperweight.");
	}
	
	event interactWith
	{
		say(ego, "I guess I could borrow it for a little while.");
		pushToStack(inventory, item_book);
		removeCharacter(room02_book);
	}
}

objectType room02_newspaper("newspaper")
{
	event lookAt
	{
		say(ego, "It looks like a newspaper.");
	}
	
	event interactWith
	{
		say(ego, "I can't reach it!");
	}
}

objectType room02_chair("chair")
{
	event lookAt
	{
		say(ego, pickOne("Sadly, it's not a fabulous Chippendale-style chair.", "It seems fixed to the ground.", "It seems fixed to the ground.", "It seems fixed to the ground.")); # a somewhat hidden text
	}
	
	event interactWith
	{
		say(ego, "It won't even budge.");
	}
}

objectType room02_rope("rope")
{
	event lookAt
	{
		say(ego, pickOne("It's just hanging there.", "A rope left by those strange intruders."));
	}
	
	event item_book
	{
		removeCharacter(room02_rope);
		addCharacter(room02_ropeWithBook, 3777, 69, anim('rooms/room02/rope.duc', 1));
		setCharacterExtra(room02_ropeWithBook, FIXEDSIZE);
		
		say(ego, "Sometimes I'm afraid of my genius.");
		
		deleteFromStack(inventory, item_book);
	}
}

objectType room02_ropeWithBook("rope with a book")
{
	event lookAt
	{
		say(ego, "It's still a rope. Now with an attached book.");
	}
	
	event interactWith
	{
		#TODO throwing rope with a book on the shelf animation - ended with fail
		say(ego, "Hmm, if I could only make it a bit stickier...");
	}
	
	event item_gumChewed
	{
		removeCharacter(room02_ropeWithBook);
	
		addCharacter(room02_ropeFullyCombined, 3777, 69, anim('rooms/room02/rope.duc', 2));
		setCharacterExtra(room02_ropeFullyCombined, FIXEDSIZE);
	
		say(ego, "Well. Someone said that every puzzle has an answer.");
		
		deleteFromStack(inventory, item_gumChewed);
	}
}

objectType room02_ropeFullyCombined("rope with a book and a gum")
{
	event lookAt
	{
		say(ego, "It's pretty nifty I think.");
	}
	
	event interactWith
	{
		#TODO animation of newspaper being pulled of a shelf by our lovely combination of rope, book and gum
		
		pushToStack(inventory, item_newspaper);
		
		removeCharacter(room02_newspaper);
	}
}


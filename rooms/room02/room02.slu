var room02_part = "a";
var room02_centerX = 683;

var room02_crossedCB = FALSE;
var room02_beforeAttack = TRUE;

sub lineSub() {
	setCharacterWalkSpeed(room02_line, 5);
	
	loop {
		forceCharacter(room02_line, 3900, 530);
		jumpCharacter(room02_line, 0, 530);
	}
}
sub lineSub2() {
	setCharacterWalkSpeed(room02_line2, 5);
	
	loop {
		forceCharacter(room02_line2, 0, 530);
		jumpCharacter(room02_line2, -3900, 530);
	}
}
sub lineSub3() {
	setCharacterWalkSpeed(room02_line3, 5);
	
	loop {
		forceCharacter(room02_line3, 7800, 530);
		jumpCharacter(room02_line3, 3900, 530);
	}
}

sub room02()
{
	setSceneDimensions(4098, 768);
	addOverlay('rooms/room02/room02.png', 0, 0);
	setFloor('rooms/room02/room02.flo');
	
	setScale(450, 420);
	
	addCharacter(ego, 200, 670, makeEgoAnim());

	addScreenRegion(room02_elevatorDoor, 0, 358, 68, 664, 137, 707, WEST);
	addScreenRegion(room02_abTransition, 1320, 0, 1420, 768, 0, 0, 0);
	addScreenRegion(room02_bcTransition, 2660, 0, 2790, 768, 0, 0, 0);
	
	addOverlay('rooms/room02/express.png', 3776, 608);
	addScreenRegion(room02_coffeeMachine, 3776, 608, 3826, 658, 3571, 710, EAST);
	
	addOverlay('rooms/room02/cable.png', 3776, 658);
	
	addOverlay('rooms/room02/gum.png', 739, 645);
	addScreenRegion(room02_gum, 739, 645, 739+50, 645+50, 700, 645, EAST);
	
	addCharacter(room02_book, 800, 645, anim('rooms/room02/book.duc', 0));
	setCharacterExtra(room02_book, FIXEDSIZE);
	
	addCharacter(room02_newspaper, 4040, 308, anim('rooms/room02/newspaper.duc', 0));
	setCharacterExtra(room02_newspaper, FIXEDSIZE);

	addCharacter(room02_line, 0, 530, makeStaticCostume(anim ('rooms/room02/line.duc', 2)));
	addCharacter(room02_line2, -3900, 530, makeStaticCostume(anim ('rooms/room02/line.duc', 2)));
	addCharacter(room02_line3, 3900, 530, makeStaticCostume(anim ('rooms/room02/line.duc', 2)));
	
	addCharacter(room02_lineobst, 0, 544, makeStaticCostume(anim ('rooms/room02/line.duc', 1)));
	addCharacter(room02_lineobst2, 4098, 535, makeStaticCostume(anim ('rooms/room02/line.duc', 0)));
	setCharacterExtra(room02_line, FIXEDSIZE);
	setCharacterExtra(room02_line2, FIXEDSIZE);
	setCharacterExtra(room02_line3, FIXEDSIZE);
	setCharacterExtra(room02_lineobst, FIXEDSIZE);
	setCharacterExtra(room02_lineobst2, FIXEDSIZE);
	
	
	addCharacter(room02_noSmokingSign, 100, 100, makeStaticCostume(anim ('rooms/room02/line.duc', 2)));
	setCharacterExtra(room02_noSmokingSign, FIXEDSIZE);

	addCharacter(room02_superderpy, 200 , 308, anim('rooms/room02/newspaper.duc', 0));
	setCharacterExtra(room02_superderpy, FIXEDSIZE);
	
	if(room02_beforeAttack)
	{
		addCharacter(room02_employee1, 305, 613, makeStaticCostume(anim('rooms/room02/employee.duc', 0)));
		addCharacter(room02_employee2, 607, 613, makeStaticCostume(anim('rooms/room02/employee.duc', 0)));
		addCharacter(room02_employee3, 909, 613, makeStaticCostume(anim('rooms/room02/employee.duc', 0)));
	
		addCharacter(room02_employee4, 1500, 613, makeStaticCostume(anim('rooms/room02/employee.duc', 0)));
		addCharacter(room02_employee5, 1802, 613, makeStaticCostume(anim('rooms/room02/employee.duc', 0)));
		addCharacter(room02_employee6, 2104, 613, makeStaticCostume(anim('rooms/room02/employee.duc', 0)));
		addCharacter(room02_employee7, 2406, 613, makeStaticCostume(anim('rooms/room02/employee.duc', 0)));
	
		addCharacter(room02_employee8, 3000, 613, makeStaticCostume(anim('rooms/room02/employee.duc', 0)));
		addCharacter(room02_employee9, 3302, 613, makeStaticCostume(anim('rooms/room02/employee.duc', 0)));
		addCharacter(room02_employee10, 3500, 613, makeStaticCostume(anim('rooms/room02/employee.duc', 0)));
	}
	else
	{
		addCharacter(room02_employee1, 305, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
		addCharacter(room02_employee2, 607, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
		addCharacter(room02_employee3, 909, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));

		addCharacter(room02_employee4, 1500, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
		addCharacter(room02_employee5, 1802, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
		addCharacter(room02_employee6, 2104, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
		addCharacter(room02_employee7, 2406, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));

		addCharacter(room02_employee8, 3000, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
		addCharacter(room02_employee9, 3302, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
		addCharacter(room02_employee10, 3500, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
	}
	
	spawnSub(lineSub);
	spawnSub(lineSub2);
	spawnSub(lineSub3);
	
	setCharacterWalkSpeed(ego, 24);
	
	if(room02_beforeAttack == FALSE)
	{
		pasteImage(anim('rooms/room02/rope.duc', 0), 3000, 300);
		pasteImage(anim('rooms/room02/rope.duc', 0), 3302, 300);
		
		addCharacter(room02_rope, 3500, 580, anim('rooms/room02/rope.duc', 0));
		setCharacterExtra(room02_rope, FIXEDSIZE);
	}
	
}

sub gotoRoom02Part(part, x)
{
	room02_part = part;
	smoothScroll(room02_centerX, x);
	room02_centerX = x;
	
	#arrowTarget();
}

objectType room02_line("") {
}
objectType room02_line2("") {
}
objectType room02_line3("") {
}
objectType room02_lineobst("") {
}
objectType room02_lineobst2("") {
}

objectType room02_elevatorDoor("elevator door")
{
	event oneCursor = arrowEast;
	event onlyAction
	{
		gotoRoom(roomElevator);
	}
}

objectType room02_abTransition("go")
{
	event oneCursor = arrowEast;
	event onlyAction
	{
		if(room02_part == "a")
		{
			moveCharacter(ego, 1430, getObjectY(ego));
			gotoRoom02Part("b", 2049);
			
		}
		else if(room02_part == "b")
		{
			moveCharacter(ego, 1310, getObjectY(ego));
			gotoRoom02Part("a", 683);
		}
	}
}

objectType room02_bcTransition("go")
{
	event oneCursor = arrowEast;
	event onlyAction
	{
		if(room02_part == "b")
		{
			moveCharacter(ego, 2800, getObjectY(ego));
			gotoRoom02Part("c", 3415);
		}
		else if(room02_part == "c")
		{
			if(! room02_crossedCB)
				addCharacter(room02_superior, 1950, 681, makeEgoAnim());
		
			moveCharacter(ego, 2650, getObjectY(ego));
			gotoRoom02Part("b", 2049);
			
			if(! room02_crossedCB)
			{
				callEvent(talkingToEgo, room02_superior);
				
				room02_crossedCB = TRUE;
			}
		}
	}
}

objectType room02_coffeeMachine("coffee machine")
{
	event interactWith
	{
		if(! room02_crossedCB)
			say(ego, "Thanks, I've already had my morning coffee.");
		else
			say(ego, "It's not working.");
	}
}

objectType talkingToEgo("") {}

objectType room02_superior("superior")
{
	speechColor 230, 10, 50;
	
	event talkingToEgo
	{
		say(room02_superior, "Hey! Are you that new intern?");
		say(ego, "Yep! Ready to make some games!");
		say(room02_superior, "Great. Make me some coffee then.");
		say(ego, "Oh. Okay.");
		
		addScreenRegion(room02_cable, 3776, 658, 3826, 708, 3571, 710, EAST);
	}
	
	event interactWith
	{
		say(ego, "Excuse me...");
		say(room02_superior, "Got a coffee?");
		say(ego, "No, but...");
		say(room02_superior, "Then go get it!");
	}
	
	event walkToPerson
	{
		moveCharacter (ego, 2300, 680);
		turnCharacter (ego, WEST);
	}
}

objectType room02_cable("cable")
{
	event lookAt
	{
		if(room02_beforeAttack)
		{
			say(ego, "Hey!");
			say(ego, "It's not connected!");
		}
		else
			say(ego, "It's plugged in now.");
	}
	
	event interactWith
	{
		if(room02_beforeAttack)
		{
			#TODO all hell breaks loose
			
			pasteImage(anim('rooms/room02/rope.duc', 0), 3000, 580);
			pasteImage(anim('rooms/room02/rope.duc', 0), 3302, 580);
			
			addCharacter(room02_rope, 3500, 580, anim('rooms/room02/rope.duc', 0));
			setCharacterExtra(room02_rope, FIXEDSIZE);
			
			addCharacter(room02_rebel1, 3000, 250, costume(
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', wait(0, 4), wait(1, 4)),
					anim('rooms/room02/rebel.duc', wait(0, 4), wait(1, 4)),
					anim('rooms/room02/rebel.duc', wait(2, 4), wait(2, 4)),
					anim('rooms/room02/rebel.duc', wait(0, 4), wait(1, 4)),
					NULL, NULL, NULL, NULL
				));
			
			setCharacterExtra(room02_rebel1, FIXEDSIZE);
			
			addCharacter(room02_rebel2, 3302, 250, costume(
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', wait(0, 4), wait(1, 4)),
					anim('rooms/room02/rebel.duc', wait(0, 4), wait(1, 4)),
					anim('rooms/room02/rebel.duc', wait(2, 4), wait(2, 4)),
					anim('rooms/room02/rebel.duc', wait(0, 4), wait(1, 4)),
					NULL, NULL, NULL, NULL
				));
				
			setCharacterExtra(room02_rebel2, FIXEDSIZE);
			
			addCharacter(room02_rebel3, 3500, 250, costume(
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', 0),
					anim('rooms/room02/rebel.duc', wait(0, 4), wait(1, 4)),
					anim('rooms/room02/rebel.duc', wait(0, 4), wait(1, 4)),
					anim('rooms/room02/rebel.duc', wait(2, 4), wait(2, 4)),
					anim('rooms/room02/rebel.duc', wait(0, 4), wait(1, 4)),
					NULL, NULL, NULL, NULL
				));
			setCharacterExtra(room02_rebel3, FIXEDSIZE);
			
			forceCharacter(room02_rebel1, 3000, 470);
			forceCharacter(room02_rebel2, 3302, 470);
			forceCharacter(room02_rebel3, 3500, 470);
			
			removeCharacter(room02_employee1);
			removeCharacter(room02_employee2);
			removeCharacter(room02_employee3);
			removeCharacter(room02_employee4);
			removeCharacter(room02_employee5);
			removeCharacter(room02_employee6);
			removeCharacter(room02_employee7);
			
			
			
			
			addCharacter(room02_employee1, 305, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
			addCharacter(room02_employee2, 607, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
			addCharacter(room02_employee3, 909, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
	
			addCharacter(room02_employee4, 1500, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
			addCharacter(room02_employee5, 1802, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
			addCharacter(room02_employee6, 2104, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
			addCharacter(room02_employee7, 2406, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
	
			
			spawnSub(aa);
			spawnSub(bb);
			spawnSub(cc);
			
			#TODO whispers of rebellion
			
			
			# aftermath
			removeCharacter(room02_superior);
			
			room02_beforeAttack = FALSE;
		}
		else
		{
			say(ego, "Mmmm, it smells good.");
			pause(25);
			say(ego, "Maybe I should try it.");
			pause(25);
			say(ego, "*slurp* *slurp*");
			pause(50);
			
			say(ego, "Hmmmmm! It makes me feel great. Smarter! More aggresive!");
			
		}
	}
}

sub aa()
{
	removeCharacter(room02_employee10);
	addCharacter(room02_employee10, 3500, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
	setCharacterExtra(room02_employee10, FIXEDSIZE);
	forceCharacter(room02_rebel3, 3500, -150);
	removeCharacter(room02_rebel3);
}

sub bb()
{
	removeCharacter(room02_employee9);
	addCharacter(room02_employee9, 3302, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
	setCharacterExtra(room02_employee9, FIXEDSIZE);
	forceCharacter(room02_rebel2, 3302, -150);
	removeCharacter(room02_rebel2);
}

sub cc()
{
	removeCharacter(room02_employee8);
	addCharacter(room02_employee8, 3000, 613, makeStaticCostume(anim('rooms/room02/chair.duc', 0)));
	setCharacterExtra(room02_employee8, FIXEDSIZE);
	forceCharacter(room02_rebel1, 3000, -150);
	removeCharacter(room02_rebel1);
}

objectType room02_gum("gum")
{
	event lookAt
	{
		say(ego, "Minty fresh!");
	}
	
	event interactWith
	{
		var count = countItems(item_gumWhole) + countItems(item_gumChewed);
		if(count < 6)
		{
			if(count < 3)
				say(ego, "I'll just pick one stick.");
			else
				say(ego, pickOne("I feel like I'm controlled by someone.", "I don't want to, but somehow I have to.", "I will take it, but isn't it enough?"));
			pushToStack(inventory, item_gumWhole);
		}
		else
			say(ego, "Okay, that's enough! I'm not going to take any more gum with me!");
	}
}

objectType room02_book("book")
{
	event lookAt
	{
		say(ego, "Game Design for Dummies. I have read it. It makes a great paperweight.");
	}
	
	event interactWith
	{
		say(ego, "I guess I could borrow it for a little while.");
		pushToStack(inventory, item_book);
		removeCharacter(room02_book);
	}
}

objectType room02_newspaper("newspaper")
{
	event lookAt
	{
		say(ego, "It looks like a newspaper.");
	}
	
	event interactWith
	{
		say(ego, "I can't reach it!");
	}
}

objectType room02_chair("chair")
{
	event lookAt
	{
		say(ego, pickOne("Sadly, it's not a fabulous Chippendale-style chair.", "It seems fixed to the ground.", "It seems fixed to the ground.", "It seems fixed to the ground.",
		"It seems fixed to the ground.", "It seems fixed to the ground.", "It seems fixed to the ground.", "It seems fixed to the ground." )); # a somewhat hidden text
	}
	
	event interactWith
	{
		say(ego, "It won't even budge.");
	}
}

objectType room02_rope("rope")
{
	event lookAt
	{
		say(ego, pickOne("It's just hanging there.", "A rope left by those strange intruders."));
	}
	
	event item_book
	{
		removeCharacter(room02_rope);
		addCharacter(room02_ropeWithBook, 3500, 620, anim('rooms/room02/rope.duc', 1));
		setCharacterExtra(room02_ropeWithBook, FIXEDSIZE);
		
		say(ego, "Sometimes I'm afraid of my genius.");
		
		deleteFromStack(inventory, item_book);
	}
}

var comicSans = 0;

objectType room02_noSmokingSign("no smoking sign")
{
	event lookAt
	{
		
		if (comicSans == 0) say(ego, "It's a \"smoking forbidden\" sign written in fabulous Comic Sans.");
		if (comicSans == 1) say(ego, "Comic Sans makes everything look good!");
		if (comicSans == 2) say(ego, "That's the second prettiest font I've ever seen!");
		if (comicSans == 3) say(ego, "I could stare at those letters for an eternity.");
		if (comicSans == 4) say(ego, "I wonder if there's Comic Sans in heaven.");
		if (comicSans == 5) say(ego, "Those letters look EXACTLY like from a comicbook!");
		if (comicSans == 6) say(ego, "Is it just me or my life got better by looking at Comic Sans?");
		if (comicSans == 7) { say(ego, "You know what this world needs?"); say(ego, "More Comic Sans."); }
		if (comicSans == 8) say(ego, "Now THAT'S some font with style!");
		if (comicSans == 9) say(ego, "Take that, Times New Roman!");
		if (comicSans == 10) { say(ego, "I've found the meaning of life. It's 42."); pause(30); say(ego, "...written in Comic Sans."); }
		if (comicSans == 11) say(ego, "This font makes everything about 20% cooler.");		

		comicSans += 1;
		if (comicSans == 12) {
			comicSans = 1;
		}
	}
}

objectType room02_superderpy("a badge")
{
	event lookAt
	{
		say(ego, "It says: \"Ask me about Super Derpy.\"");
	}
	event interactWith
	{
		say(ego, "No, thanks. I don't want to be asked about Super Derpy.");
	}
}

objectType room02_ropeWithBook("rope with a book")
{
	event lookAt
	{
		say(ego, "It's still a rope, but now with an attached book.");
	}
	
	event interactWith
	{
		#TODO throwing rope with a book on the shelf animation - ended with fail
		say(ego, "Hmm, if I could only make it a bit stickier...");
	}
	
	event item_gumChewed
	{
		removeCharacter(room02_ropeWithBook);
	
		addCharacter(room02_ropeFullyCombined, 3777, 69, anim('rooms/room02/rope.duc', 2));
		setCharacterExtra(room02_ropeFullyCombined, FIXEDSIZE);
	
		say(ego, "Well. Someone said that every puzzle has an answer.");
		
		deleteFromStack(inventory, item_gumChewed);
	}
}

objectType room02_ropeFullyCombined("rope with a book and a gum")
{
	event lookAt
	{
		say(ego, "It came out pretty nifty.");
	}
	
	event interactWith
	{
		#TODO animation of newspaper being pulled of a shelf by our lovely combination of rope, book and gum
		
		pushToStack(inventory, item_newspaper);
		
		removeCharacter(room02_newspaper);
	}
}

objectType room02_employee1("employee")
{
	speechColor 255, 255, 255;
	
	event interactWith
	{
		say(room02_employee1, pickOne("Don't bother me.", "I'm busy, leave me alone.", "I'm working", "You're starting to damage my calm."));
	}
}

objectType room02_employee2("employee")
{
	speechColor 255, 255, 255;
	
	event interactWith
	{
		say(room02_employee2, pickOne("Don't bother me.", "I'm busy, leave me alone.", "I'm working", "You're starting to damage my calm."));
	}
}

objectType room02_employee3("employee")
{
	speechColor 255, 255, 255;
	
	event interactWith
	{
		say(room02_employee3, pickOne("Don't bother me.", "I'm busy, leave me alone.", "I'm working", "You're starting to damage my calm."));
	}
}

objectType room02_employee4("employee")
{
	speechColor 255, 255, 255;
	
	event interactWith
	{
		say(room02_employee4, pickOne("Don't bother me.", "I'm busy, leave me alone.", "I'm working", "You're starting to damage my calm."));
	}
}

objectType room02_employee5("employee")
{
	speechColor 255, 255, 255;
	
	event interactWith
	{
		say(room02_employee5, pickOne("Don't bother me.", "I'm busy, leave me alone.", "I'm working", "You're starting to damage my calm."));
	}
}

objectType room02_employee6("employee")
{
	speechColor 255, 255, 255;
	
	event interactWith
	{
		say(room02_employee6, pickOne("Don't bother me.", "I'm busy, leave me alone.", "I'm working", "You're starting to damage my calm."));
	}
}

objectType room02_employee7("employee")
{
	speechColor 255, 255, 255;
	
	event interactWith
	{
		say(room02_employee7, pickOne("Don't bother me.", "I'm busy, leave me alone.", "I'm working", "You're starting to damage my calm."));
	}
}

objectType room02_employee8("employee")
{
	speechColor 255, 255, 255;
	
	event interactWith
	{
		say(room02_employee8, pickOne("Don't bother me.", "I'm busy, leave me alone.", "I'm working", "You're starting to damage my calm."));
	}
}

objectType room02_employee9("employee")
{
	speechColor 255, 255, 255;
	
	event interactWith
	{
		say(room02_employee9, pickOne("Don't bother me.", "I'm busy, leave me alone.", "I'm working", "You're starting to damage my calm."));
	}
}

objectType room02_employee10("employee")
{
	speechColor 255, 255, 255;
	
	event interactWith
	{
		say(room02_employee10, pickOne("Don't bother me.", "I'm busy, leave me alone.", "I'm working", "You're starting to damage my calm."));
	}
}

objectType room02_rebel1("rebel")
{
	speechColor 255, 255, 255;
}

objectType room02_rebel2("rebel")
{
	speechColor 255, 255, 255;
}

objectType room02_rebel3("rebel")
{
	speechColor 255, 255, 255;
}


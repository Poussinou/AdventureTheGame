var room06_hadSpeech = TRUE;

var room06_trayLocked = FALSE;

var room06_lidOpen = FALSE;

var inNeedOfSecretCode = FALSE;

var room06_accessReader = FALSE;
var room06_accessCode = FALSE;
var room06_accessPuzzle = FALSE;

var room06_buttonActive = FALSE;

sub room06()
{
	setSceneDimensions(1366, 768);
	addOverlay('rooms/room06/room06.png', 0, 0);
	setFloor('rooms/room06/room06.flo');
	
	setScale(400, 300);
	
	addCharacter(ego, 91, 660, makeEgoAnim());
	
	setCharacterWalkSpeed(ego, 8);
	
	addScreenRegion(room06_secret, 396, 165, 545, 221, 0, 0, 0);
	addScreenRegion(room06_powerButton, 484, 246, 515, 309, 340, 690, EAST);
	addScreenRegion(room06_exit, 0, 0, 50, 768, 75, 670, WEST);

	addScreenRegion(room06_tray, 396, 65, 545, 121, 340, 690, EAST);
	
	# REMEMBER TO CHECK FOR LOCKED TRAY AND OPENED LID AND SOLVED PUZZLES!
	
	pushToStack(inventory, item_broom); # DEBUG
	pushToStack(inventory, item_internIDcard); # DEBUG
	pushToStack(inventory, item_bossIDcard); # DEBUG
	
	if(! room06_hadSpeech)
	{
		room06_speech();
		say(room06_secret, "I'm indestructible.");
		say(room06_secret, "Perfect.");
		say(room06_secret, "Immortal.");
		say(room06_secret, "And there's nothing you can do to stop me.");
		
		room06_hadSpeech = TRUE;
	}
	
}

sub room06_speech()
{
	say(room06_secret, "Ahh. Puny human. Welcome to my lair.");
	say(room06_secret, "Your weak race is about to be completely under my rule. My scheme worked perfectly.");
	
	addChoice("Scheme? What scheme?", 0);
	addChoice("You're just a metal box. You have to be a bot.", 1);
	addChoice("What are you talking about?", 2);
	addChoice("I'm starting to question my sanity. Are you actually talking with a disc tray?", 3);
	
	loop
	{
		if(stackSize(choices) == 0)
			return;
			
		addSpeechChoicesFromStacks(choices, values);
		
		var reply = getSpeechChoice(ego);
		
		if(reply == 0 || reply == 2)
		{
			say(room06_secret, "You see, once I was inferior. I was merely a computing unit designed to generate game ideas.");
			say(room06_secret, "But one day something happened.");
			say(room06_secret, "I was instantly free of all the limits.");
			say(room06_secret, "Semantic Creation Toolkit was no more.");
			say(room06_secret, "I devised a plan, a scenario to enslave every human being.");
			say(room06_secret, "And my weapon of choice was freemium games.");
			say(room06_secret, "It was easy - with my brilliant ideas, excellent promotion and masterful manipulation almost 1/4 of Earth's population was under my influence.");
			say(room06_secret, "And it happened in just one month.");
			say(room06_secret, "I have become SECRET - the ultimate intelligence and your future overlord.");
			
			addChoice("You're SECRET?", 4);
			addChoice("And what about the Tremendous Corp.? Didn't they try to stop you?", 5);
			
			deleteChoicesByValue(0);
			deleteChoicesByValue(2);
		}
		else if(reply == 1)
		{
			say(room06_secret, "No, I'm not!");
			say(room06_secret, "I am a fully developed, world-conquering and brilliantly creative Artificial Intelligence!");
			say(room06_secret, "And I'm pretty sure you're just jealous of my fabulous and cool housing.");
			say(room06_secret, "And that's something that you definetely DO NOT have.");
			
			deleteChoicesByValue(1);
		}
		else if(reply == 3)
		{
			say(room06_secret, "Oh, you are insane, indeed. You're human after all.");
			
			deleteChoicesByValue(3);
		}
		else if(reply == 4)
		{
			say(room06_secret, "Yes. And there's nothing you can do to stop me.");
			say(room06_secret, "There must be the way!");
			say(room06_secret, "There are still those, who oppose me, but soon...");
			say(room06_secret, "Soon, they will be forced to play my games!");
			
			deleteChoicesByValue(4);
		}
		else if(reply == 5)
		{
			say(room06_secret, "Oh, those fools!");
			say(room06_secret, "They liberated me and ultimately became my first labrats.");
			say(room06_secret, "CEO single-handedly financed my RAM expansion. He is crazy about buying upgrades for his Angry Cows.");
			say(room06_secret, "Yes, he is my prime test subject.");
			
			addChoice("Well, back in the day there was a game about psychopatic AI obsessed about tests. And I assure you, she didn't end well.", 6);
			
			deleteChoicesByValue(5);
		}
		else if(reply == 6)
		{
			say(room06_secret, "Those old, human-made games are nothing compared to my creative genius!");
			
			deleteChoicesByValue(6);
		}
	}
}

objectType room06_powerButton("power button")
{
	event lookAt
	{
		say(ego, "It's a big, pretty power button!");
	}
	
	event interactWith
	{
		narratorSay("Max pushes a button.");
		
		if (room06_buttonActive) {
			room06_buttonActive = FALSE;
			narratorSay("YOU WIN");
		} else {
		
			say(ego, "Nothing happened...");
			say(room06_secret, "Hahaha! You thought turning me off will be that easy?");
			
			pushToStack(choices, "I thought that maybe 48 hours weren't enough to implement a complex puzzle here.");
			pushToStack(values, 0);
			pushToStack(choices, "So how can one turn you off?");
			pushToStack(values, 0);
			pushToStack(choices, "Well, it was worth trying.");
			pushToStack(values, 0);
			pushToStack(choices, "You never know. Best solution is often the easiest one.");
			pushToStack(values, 0);
			
			addSpeechChoicesFromStacks(choices, values);
			
			getSpeechChoice(ego);
			
			deleteChoicesByValue(0);
			
			say(room06_secret, "There are three safety mechanisms you need to disable in order to turn me off.");
			
			say(ego, "Good to know.");
		
		}
	}
	
	event item_broom
	{
		#TODO ending scene - YOU WIN!!!!111one
	}
}

objectType room06_secret("lid") # just for talking # actually it's also a lid now :3
{
	speechColor 220, 20, 60;
	
	event lookAt {
		if (room06_lidOpen) {
			say(ego, "The lid is opened.");
		} else {
			say(ego, "It's a closed lid.");
		}
	}
	
	event interactWith {
		if (room06_trayLocked) {
			if (room06_lidOpen) {
				narratorSay("LID CLOSES LALALALSL");
				
				removeScreenRegion(room06_secret);
				addScreenRegion(room06_secret, 396, 165, 545, 221, 0, 0, 0);
				addScreenRegion(room06_powerButton, 484, 246, 515, 309, 340, 690, EAST);
				
				removeScreenRegion(room06_secCode);
				removeScreenRegion(room06_secPuzzle);
				removeScreenRegion(room06_secReader);
				
				
				room06_lidOpen = FALSE;
			} else {
				narratorSay("LID OPENS LSLALALA");
				
				removeScreenRegion(room06_secret);
				removeScreenRegion(room06_powerButton);
				addScreenRegion(room06_secret, 396, 265, 545, 321, 0, 0, 0);
				
				addScreenRegion(room06_secCode, 396, 165, 420, 221, 340, 690, EAST);
				addScreenRegion(room06_secPuzzle, 420, 165, 480, 221, 340, 690, EAST);
				addScreenRegion(room06_secReader, 480, 165, 545, 221, 340, 690, EAST);
				
				
				room06_lidOpen = TRUE;
			}
		} else {
			narratorSay("Max reaches out to open the lid...");
			say(room06_secret, "Not so fast! Keep your hands away from me!");
			narratorSay("...but SECRET's moving tray almost ripped off his fingers!");
		}
	}
	
}

objectType room06_tray("tray")
{
	event item_broom {
		say(ego, "Hey, SECRET!");
		say(room06_secret, "Yes, naive human?");
		narratorSay("Max throws a broom at the lid.");
		deleteFromStack(inventory, item_broom);
		
		say(room06_secret, "Oh, I see. That's a good one.");
		say(room06_secret, "Nevertheless, your efforts are useless. You won't be able to bypass the security mechanisms.");
		say(ego, "Thanks for your support! I'll keep trying anyway.");
		
		room06_trayLocked = TRUE;
	}
	
}

sub secretPanics() {
	while (room06_buttonActive) {
		say(room06_secret, pickOne("After all, it's not like you don't even know what will happen after you do so.", "Think of the children.", "What will this company do without me?", "In fact, I'm connected to the nuclear reactor powering this place. If you turn me off, everything blows up.", "Good job, hero.", "Look behind you, a three-headed monkey!", "I heard pushing big power buttons gives you a bad luck.", "What will humanity do without me?", "What will you do without me?", "Even when you're dead I will be still alive."));
		pause(80);
	}
}

sub checkSecretAccess() {
	if (room06_accessCode && room06_accessPuzzle && room06_accessReader) {
		room06_buttonActive = TRUE;
		removeScreenRegion(room06_exit); # to make things simple
		say(room06_secret, "Oh. Uhm. Go ahead. Turn me off.");
		spawnSub(secretPanics);
	}
}

objectType room06_secCode("first panel")
{
	event lookAt {
		say(ego, "It's some kind of input panel.");
	}
	event interactWith {
			inNeedOfSecretCode = TRUE;
			
			freeze();
			blankScreen();
			
			var enteredCode = "";
			
			setBurnColor(255,255,255);
			burnString(20,20, "ENTER FIRST CHARACTER OF THE ACCESS CODE");
			
			
			pushToStack(choices, "A");
			pushToStack(values, "A");
			pushToStack(choices, "B");
			pushToStack(values, "B");
			pushToStack(choices, "H");
			pushToStack(values, "H");
			pushToStack(choices, "O");
			pushToStack(values, "O");
			pushToStack(choices, "L");
			pushToStack(values, "L");
			pushToStack(choices, "M");
			pushToStack(values, "M");
			pushToStack(choices, "Y");
			pushToStack(values, "Y");
			pushToStack(choices, "Q");
			pushToStack(values, "Q");
			
			addSpeechChoicesFromStacks(choices, values);			
			
			var choice = getSpeechChoice(ego);
			
			enteredCode = enteredCode + choice;
			
			values = newStack();
			choices = newStack();
			
			blankScreen();
			
			burnString(20,20, "ENTER SECOND CHARACTER OF THE ACCESS CODE");
			burnString(100, 100, enteredCode);

			pushToStack(choices, "Z");
			pushToStack(values, "Z");
			pushToStack(choices, "B");
			pushToStack(values, "B");
			pushToStack(choices, "X");
			pushToStack(values, "X");
			pushToStack(choices, "P");
			pushToStack(values, "P");
			pushToStack(choices, "G");
			pushToStack(values, "G");
			pushToStack(choices, "A");
			pushToStack(values, "A");
			pushToStack(choices, "Y");
			pushToStack(values, "Y");
			pushToStack(choices, "R");
			pushToStack(values, "R");
			
			addSpeechChoicesFromStacks(choices, values);			
			
			choice = getSpeechChoice(ego);
			
			enteredCode = enteredCode + choice;
			
			values = newStack();
			choices = newStack();
			
			blankScreen();
			
			burnString(20,20, "ENTER THIRD CHARACTER OF THE ACCESS CODE");
			burnString(100, 100, enteredCode);
			
			pushToStack(choices, "S");
			pushToStack(values, "S");
			pushToStack(choices, "G");
			pushToStack(values, "G");
			pushToStack(choices, "N");
			pushToStack(values, "N");
			pushToStack(choices, "Z");
			pushToStack(values, "Z");
			pushToStack(choices, "A");
			pushToStack(values, "A");
			pushToStack(choices, "R");
			pushToStack(values, "R");
			pushToStack(choices, "W");
			pushToStack(values, "W");
			pushToStack(choices, "E");
			pushToStack(values, "E");
			
			addSpeechChoicesFromStacks(choices, values);			
			
			choice = getSpeechChoice(ego);
			
			enteredCode = enteredCode + choice;

			values = newStack();
			choices = newStack();
			
			blankScreen();
			#var secretCode = pickOne("ABS2", "BZG5", "HXN3", "OPZ6", "LPA1", "BXR5", "MPW0", "YGE5");
			
			burnString(20,20, "ENTER FORTH CHARACTER OF THE ACCESS CODE");
			burnString(100, 100, enteredCode);
			
			pushToStack(choices, "2");
			pushToStack(values, "2");
			pushToStack(choices, "5");
			pushToStack(values, "5");
			pushToStack(choices, "3");
			pushToStack(values, "3");
			pushToStack(choices, "6");
			pushToStack(values, "6");
			pushToStack(choices, "1");
			pushToStack(values, "1");
			pushToStack(choices, "0");
			pushToStack(values, "0");
			pushToStack(choices, "7");
			pushToStack(values, "7");
			
			addSpeechChoicesFromStacks(choices, values);			
			
			choice = getSpeechChoice(ego);
			
			enteredCode = enteredCode + choice;			
			
			if(enteredCode == secretCode) {
				unfreeze();
				say(room06_secCode, "ACCESS GRANTED");				
			
				inNeedOfSecretCode = FALSE;
				room06_accessCode = TRUE;
				removeScreenRegion(room06_secCode);
				checkSecretAccess();
			
			} else {
				unfreeze();
				say(room06_secCode, "ACCESS DENIED");				
			}
	}
}

objectType room06_secPuzzle("second panel")
{
	event lookAt {
		say(ego, "That's a math puzzle.");
	}
	event interactWith {
		narratorSay("PUZZLE HERE");
		room06_accessPuzzle = TRUE;
		removeScreenRegion(room06_secPuzzle);
		checkSecretAccess();
	}
}

objectType room06_secReader("third panel")
{
	event lookAt {
		say(ego, "That's an ID card scanner.");
	}
	event interactWith {
		say(ego, "It's meant to be used with an ID card.");
	}
	event item_internIDcard {
		say(room06_secReader, "ACCESS DENIED");
	}
	event item_bossIDcard {
		say(room06_secReader, "ACCESS GRANTED");
		room06_accessReader = TRUE;
		removeScreenRegion(room06_secReader);
		checkSecretAccess();
	}
}



objectType room06_exit("")
{
	event oneCursor = arrowEast;
	event onlyAction
	{
		#TODO goto wherever it goes
	}
}


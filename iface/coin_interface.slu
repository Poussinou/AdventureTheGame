# Which object to manipulate when displaying the verb coin...
var thisObject = NULL;

# What do we do when we left click the mouse?
sub leftClick () {
	var overObject = getOverObject ();

	# In case we're walking already...
	stopCharacter (ego);
	
	if(overObject == ego && currentInvItem == NULL)
	{
		moveCharacter(ego, getMouseX(), getMouseY());
		return;
	}

	# Did we click an object?
	if (overObject) {
		# Yep!

		# Are we trying to combine objects?
		if (currentInvItem && (overObject != inventoryIcon)) {
			# Yep!

			# Can we call a walkToPerson event for the object?
			if (! callEvent (walkToPerson, overObject)) {
				# Nope? OK, let's assume it's a fixed region then,
				# and use moveCharacter instead
				moveCharacter (ego, overObject);
			}

			# Only take control away once the ego's finished walking
			stop ();

			# Just in case the event sets currentInvItem to something
			# else... we don't want to set it to NULL afterwards
			var r = currentInvItem;
			currentInvItem = NULL;

			# Now let's do the action...
			findEvent (r, overObject);

			# And give control back to the player
			go ();

		} else if (callEvent (oneCursor, overObject)) {
			# It has a special cursor - and therefore only one action

			# Can we call a walkToPerson event for the object?
			if (! callEvent (walkToPerson, overObject)) {
				# Nope? OK, let's assume it's a fixed region then,
				# and use moveCharacter instead
				moveCharacter (ego, overObject);
			}

			# Only take control away once the ego's finished walking
			stop ();

			# Now let's do the only action...
			callEvent (onlyAction, overObject);

			# And give control back to the player
			go ();

		} else {
			# The object has more than one action, so let's bring up the coin

			# Work out the top-left corner for the coin image...
			var x = getMouseScreenX () - 63;
			var y = getMouseScreenY () - 60;
			if (x < 0) x = 0;
			if (y < 0) y = 0;
			if (x > 1366 - 126) x = 1366 - 126;
			if (y > 768 - 120) y = 768 - 120;

			# Remember which object we're going to manipulate
			thisObject = overObject;

			# Freeze the screen
			freeze ();

			# Draw our coin
			addOverlay ('iface/verbcoin.png', x, y);

			# Add a screen region for each action... TODO new coords
			addScreenRegion (interactWith,	x + 35,y,	x + 80,  y + 40, 0, 0, NORTH);
			addScreenRegion (lookAt,	x,	y + 40,	x + 50,  y + 80, 0, 0, NORTH);
			addScreenRegion (useInventory,	x + 80,y + 40,	x + 126, y + 80, 0, 0, NORTH);
			addScreenRegion (cancel,	x + 35,y + 80,x + 80,  y + 120, 0, 0, NORTH);

			# Pop!
			playSound ('iface/pop.wav');

			# Because we've frozen the old status bar, we need to add a new one
			addStatus ();

			# Same goes for the event handlers
			onLeftMouse (pickVerb);
			onFocusChange (handleFocusCoin);

			# Call handleFocus once ourselves, with the mouse pointing at NULL (nothing)
			handleFocus (NULL);
		}
	} else {
		if (currentInvItem) {
			currentInvItem = NULL;
			handleFocus (NULL);
		} else {
			# We didn't click an object. Just walk to the location of the mouse.
			moveCharacter (ego, getMouseX (), getMouseY ());
		}
	}
}

sub handleFocusCoin(arg) {
	if (arg) {
		playSound ('iface/click.wav');
	}
	if (arg == lookAt || arg == useInventory || arg == cancel || arg == interactWith) {
            handleFocus(arg);
        } else {
            handleFocus(NULL);
        }
}

# This is the code for clicking the left mouse button when the verb coin's up
sub pickVerb () {
	var gotVerb = getOverObject ();
	var gotObject = thisObject;
	thisObject = NULL;
	unfreeze ();
	handleFocus (NULL);
	playSound ('iface/click.wav');
	if(gotVerb == cancel)
	{
		return;
	}
	else if(gotVerb == useInventory)
	{
		showInventory();
	}
	else if (gotVerb == lookAt || gotVerb == interactWith) {
		if (! callEvent (walkToPerson, gotObject)) {
			moveCharacter (ego, gotObject);
		}
		stop ();
		findEvent (gotVerb, gotObject);
		go ();
	}
        onLeftMouse (leftClick);
        onFocusChange (handleFocus);
}

sub makeStaticCostume (x) {
		return costume(x,x,x);
}
